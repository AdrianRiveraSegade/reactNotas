{"ast":null,"code":"var _jsxFileName = \"/home/hack/a/proyecto3/notas/src/components/RegisterForm.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\n//import { useNavigate } from \"react-router-dom\";\n//import { toast } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegisterForm = () => {\n  _s();\n  //Colocamos aquí los estados para los datos del formulario\n  const [nickname, setNickname] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  //Usamos useNavigate para redirideccionar al usuario\n  //const navigate= useNavigate();\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"registerForm\",\n    onSubmit: async event => {\n      try {\n        //Prevenir la acción por defecto del formulario cuando se envíe\n        event.preventDefault();\n        //Hacemos una petición al server enviando un JSON con los datos dados por el usuario\n        const res = await fetch(\"http://localhost:4000/user\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            nickname,\n            email,\n            password\n          })\n        });\n\n        //Accedemos al body de la respuesta\n        const body = await res.json();\n\n        //Si la respuesta viene mal, enviamos un error\n        if (!res.ok) {\n          throw new Error(body.message);\n        }\n      } catch (error) {\n        //Si hay algún error lo sacamos por consola y lo mostramos como alerta al usuario\n        console.error(error);\n        //toast.error(error.message);\n      }\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"nickname\",\n      children: \"Nombre de usuario\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"nickname\",\n      type: \"nickname\",\n      value: nickname,\n      onChange: event => {\n        setNickname(event.target.value);\n      },\n      placeholder: \"Paco\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"email\",\n      children: \"Correo electronico\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"email\",\n      type: \"email\",\n      value: email,\n      onChange: event => {\n        setEmail(event.target.value);\n      },\n      placeholder: \"example@mail.com\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"password\",\n      children: \"Contrase\\xF1a\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"password\",\n      type: \"password\",\n      value: password,\n      onChange: event => {\n        setPassword(event.target.value);\n      },\n      placeholder: \"*******\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Registrarse\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_s(RegisterForm, \"AxJKy6heN23bXqbbO73LxSLeaSQ=\");\n_c = RegisterForm;\nexport default RegisterForm;\nvar _c;\n$RefreshReg$(_c, \"RegisterForm\");","map":{"version":3,"names":["useState","RegisterForm","nickname","setNickname","email","setEmail","password","setPassword","event","preventDefault","res","fetch","method","headers","body","JSON","stringify","json","ok","Error","message","error","console","target","value"],"sources":["/home/hack/a/proyecto3/notas/src/components/RegisterForm.js"],"sourcesContent":["import { useState } from \"react\";\n//import { useNavigate } from \"react-router-dom\";\n//import { toast } from \"react-toastify\";\n\nconst RegisterForm = () => {\n  //Colocamos aquí los estados para los datos del formulario\n  const [nickname, setNickname] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  //Usamos useNavigate para redirideccionar al usuario\n  //const navigate= useNavigate();\n\n  return (\n    <form\n      className=\"registerForm\"\n      onSubmit={async (event) => {\n        try {\n          //Prevenir la acción por defecto del formulario cuando se envíe\n          event.preventDefault();\n          //Hacemos una petición al server enviando un JSON con los datos dados por el usuario\n          const res = await fetch(\"http://localhost:4000/user\", {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({ nickname, email, password }),\n          });\n\n          //Accedemos al body de la respuesta\n          const body = await res.json();\n\n          //Si la respuesta viene mal, enviamos un error\n          if (!res.ok) {\n            throw new Error(body.message);\n          }\n        } catch (error) {\n          //Si hay algún error lo sacamos por consola y lo mostramos como alerta al usuario\n          console.error(error);\n          //toast.error(error.message);\n        }\n      }}\n    >\n      <label htmlFor=\"nickname\">Nombre de usuario</label>\n      <input\n        id=\"nickname\"\n        type=\"nickname\"\n        value={nickname}\n        onChange={(event) => {\n          setNickname(event.target.value);\n        }}\n        placeholder=\"Paco\"\n      />\n      <label htmlFor=\"email\">Correo electronico</label>\n      <input\n        id=\"email\"\n        type=\"email\"\n        value={email}\n        onChange={(event) => {\n          setEmail(event.target.value);\n        }}\n        placeholder=\"example@mail.com\"\n      />\n      <label htmlFor=\"password\">Contraseña</label>\n      <input\n        id=\"password\"\n        type=\"password\"\n        value={password}\n        onChange={(event) => {\n          setPassword(event.target.value);\n        }}\n        placeholder=\"*******\"\n      />\n      <button>Registrarse</button>\n    </form>\n  );\n};\n\nexport default RegisterForm;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC;AACA;AAAA;AAEA,MAAMC,YAAY,GAAG,MAAM;EAAA;EACzB;EACA,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGH,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACI,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACM,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;;EAE5C;EACA;;EAEA,oBACE;IACE,SAAS,EAAC,cAAc;IACxB,QAAQ,EAAE,MAAOQ,KAAK,IAAK;MACzB,IAAI;QACF;QACAA,KAAK,CAACC,cAAc,EAAE;QACtB;QACA,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,4BAA4B,EAAE;UACpDC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YAAE,cAAc,EAAE;UAAmB,CAAC;UAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YAAEd,QAAQ;YAAEE,KAAK;YAAEE;UAAS,CAAC;QACpD,CAAC,CAAC;;QAEF;QACA,MAAMQ,IAAI,GAAG,MAAMJ,GAAG,CAACO,IAAI,EAAE;;QAE7B;QACA,IAAI,CAACP,GAAG,CAACQ,EAAE,EAAE;UACX,MAAM,IAAIC,KAAK,CAACL,IAAI,CAACM,OAAO,CAAC;QAC/B;MACF,CAAC,CAAC,OAAOC,KAAK,EAAE;QACd;QACAC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;QACpB;MACF;IACF,CAAE;IAAA,wBAEF;MAAO,OAAO,EAAC,UAAU;MAAA,UAAC;IAAiB;MAAA;MAAA;MAAA;IAAA,QAAQ,eACnD;MACE,EAAE,EAAC,UAAU;MACb,IAAI,EAAC,UAAU;MACf,KAAK,EAAEnB,QAAS;MAChB,QAAQ,EAAGM,KAAK,IAAK;QACnBL,WAAW,CAACK,KAAK,CAACe,MAAM,CAACC,KAAK,CAAC;MACjC,CAAE;MACF,WAAW,EAAC;IAAM;MAAA;MAAA;MAAA;IAAA,QAClB,eACF;MAAO,OAAO,EAAC,OAAO;MAAA,UAAC;IAAkB;MAAA;MAAA;MAAA;IAAA,QAAQ,eACjD;MACE,EAAE,EAAC,OAAO;MACV,IAAI,EAAC,OAAO;MACZ,KAAK,EAAEpB,KAAM;MACb,QAAQ,EAAGI,KAAK,IAAK;QACnBH,QAAQ,CAACG,KAAK,CAACe,MAAM,CAACC,KAAK,CAAC;MAC9B,CAAE;MACF,WAAW,EAAC;IAAkB;MAAA;MAAA;MAAA;IAAA,QAC9B,eACF;MAAO,OAAO,EAAC,UAAU;MAAA,UAAC;IAAU;MAAA;MAAA;MAAA;IAAA,QAAQ,eAC5C;MACE,EAAE,EAAC,UAAU;MACb,IAAI,EAAC,UAAU;MACf,KAAK,EAAElB,QAAS;MAChB,QAAQ,EAAGE,KAAK,IAAK;QACnBD,WAAW,CAACC,KAAK,CAACe,MAAM,CAACC,KAAK,CAAC;MACjC,CAAE;MACF,WAAW,EAAC;IAAS;MAAA;MAAA;MAAA;IAAA,QACrB,eACF;MAAA,UAAQ;IAAW;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QACvB;AAEX,CAAC;AAAC,GAtEIvB,YAAY;AAAA,KAAZA,YAAY;AAwElB,eAAeA,YAAY;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}