{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { useTokenContext } from \"../context/TokenContext\";\nconst useNoteById = id => {\n  _s();\n  const [note, setNote] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const {\n    token\n  } = useTokenContext();\n  useEffect(() => {\n    const fetchNoteById = async () => {\n      try {\n        setLoading(true);\n        const res = await fetch(`http://localhost:4000/note/${id}`, {\n          headers: token ? {\n            Authorization: token\n          } : {}\n        });\n        const body = await res.json();\n        if (!res.ok) {\n          throw new Error(body.message);\n        }\n        setNote(body.data);\n      } catch (error) {\n        console.error(error);\n        setErrorMessage(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchNoteById();\n  }, [token, id]);\n  return {\n    note,\n    setNote,\n    loading,\n    errorMessage\n  };\n};\n_s(useNoteById, \"WGcMST6TRAiA18ollbs32Igj7u0=\", false, function () {\n  return [useTokenContext];\n});\nexport default useNoteById;","map":{"version":3,"names":["useState","useEffect","useTokenContext","useNoteById","id","note","setNote","loading","setLoading","errorMessage","setErrorMessage","token","fetchNoteById","res","fetch","headers","Authorization","body","json","ok","Error","message","data","error","console"],"sources":["/home/hack/a/proyecto3/notas/src/hooks/useNoteByID.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useTokenContext } from \"../context/TokenContext\";\n\nconst useNoteById = (id) => {\n  const [note, setNote] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  const { token } = useTokenContext();\n\n  useEffect(() => {\n    const fetchNoteById = async () => {\n      try {\n        setLoading(true);\n        const res = await fetch(`http://localhost:4000/note/${id}`, {\n          headers: token ? { Authorization: token } : {},\n        });\n\n        const body = await res.json();\n\n        if (!res.ok) {\n          throw new Error(body.message);\n        }\n\n        setNote(body.data);\n      } catch (error) {\n        console.error(error);\n        setErrorMessage(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchNoteById();\n  }, [token, id]);\n\n  return { note, setNote, loading, errorMessage };\n};\n\nexport default useNoteById;\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,eAAe,QAAQ,yBAAyB;AAEzD,MAAMC,WAAW,GAAIC,EAAE,IAAK;EAAA;EAC1B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC,CAAC;EACpC,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACS,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEpD,MAAM;IAAEW;EAAM,CAAC,GAAGT,eAAe,EAAE;EAEnCD,SAAS,CAAC,MAAM;IACd,MAAMW,aAAa,GAAG,YAAY;MAChC,IAAI;QACFJ,UAAU,CAAC,IAAI,CAAC;QAChB,MAAMK,GAAG,GAAG,MAAMC,KAAK,CAAE,8BAA6BV,EAAG,EAAC,EAAE;UAC1DW,OAAO,EAAEJ,KAAK,GAAG;YAAEK,aAAa,EAAEL;UAAM,CAAC,GAAG,CAAC;QAC/C,CAAC,CAAC;QAEF,MAAMM,IAAI,GAAG,MAAMJ,GAAG,CAACK,IAAI,EAAE;QAE7B,IAAI,CAACL,GAAG,CAACM,EAAE,EAAE;UACX,MAAM,IAAIC,KAAK,CAACH,IAAI,CAACI,OAAO,CAAC;QAC/B;QAEAf,OAAO,CAACW,IAAI,CAACK,IAAI,CAAC;MACpB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;QACpBb,eAAe,CAACa,KAAK,CAACF,OAAO,CAAC;MAChC,CAAC,SAAS;QACRb,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDI,aAAa,EAAE;EACjB,CAAC,EAAE,CAACD,KAAK,EAAEP,EAAE,CAAC,CAAC;EAEf,OAAO;IAAEC,IAAI;IAAEC,OAAO;IAAEC,OAAO;IAAEE;EAAa,CAAC;AACjD,CAAC;AAAC,GAlCIN,WAAW;EAAA,QAKGD,eAAe;AAAA;AA+BnC,eAAeC,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}