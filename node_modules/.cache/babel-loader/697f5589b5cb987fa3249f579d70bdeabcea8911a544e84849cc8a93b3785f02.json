{"ast":null,"code":"var _jsxFileName = \"/home/hack/a/proyecto3/notas/src/context/TokenContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport useLocalStorage from \"../hooks/useLocalStorage\";\n\n//Creamos un contexto para hacer el token accesible a cualquier componente.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TokenContext = /*#__PURE__*/createContext();\n\n//Componente que crea un estado para el token\nexport const TokenContextProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [token, setToken] = useLocalStorage(\"token\", \"\");\n  const [loggedUser, setLoggedUser] = useState({});\n  const navigate = useNavigate();\n\n  //useEffect que se ejecuta cada vez que el token cambia\n  useEffect(() => {\n    //Si el token no existe, cambiamos loggedUser a un object vacío y cortamos la funcion\n    if (!token) {\n      setLoggedUser({});\n      return;\n    }\n\n    //Si el token existe recogemos la información del usuario y metemos los datos en loggedUser\n    const fetchUserProfile = async () => {\n      try {\n        const tokenEncryptedPayload = token.split(\".\")[1];\n        const tokenPayLoad = JSON.parse(atob(tokenEncryptedPayload));\n        const res = await fetch(`http://localhost:4000/users/${tokenPayLoad.id}`, {\n          headers: {\n            Authorization: token\n          }\n        });\n        const body = await res.json();\n        if (!res.ok) {\n          throw new Error(body.message);\n        }\n        setLoggedUser({\n          ...body.data.user,\n          id: tokenPayLoad.id\n        });\n      } catch (error) {\n        //Si hubiese un error al loguear devolvemos al user al login\n        console.error(error);\n        setToken(\"\");\n        navigate(\"/login\");\n      }\n    };\n    fetchUserProfile();\n  }, [token, navigate, setToken]);\n  return /*#__PURE__*/_jsxDEV(TokenContext.Provider, {\n    value: {\n      token,\n      setToken,\n      loggedUser,\n      setLoggedUser\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(TokenContextProvider, \"kUjpReOYcC3Xf2JJGngbQSeVBMY=\", false, function () {\n  return [useLocalStorage, useNavigate];\n});\n_c = TokenContextProvider;\nexport const useTokenContext = () => {\n  _s2();\n  return useContext(TokenContext);\n};\n_s2(useTokenContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"TokenContextProvider\");","map":{"version":3,"names":["createContext","useContext","useEffect","useState","useNavigate","useLocalStorage","TokenContext","TokenContextProvider","children","token","setToken","loggedUser","setLoggedUser","navigate","fetchUserProfile","tokenEncryptedPayload","split","tokenPayLoad","JSON","parse","atob","res","fetch","id","headers","Authorization","body","json","ok","Error","message","data","user","error","console","useTokenContext"],"sources":["/home/hack/a/proyecto3/notas/src/context/TokenContext.js"],"sourcesContent":["import { createContext, useContext, useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport useLocalStorage from \"../hooks/useLocalStorage\";\n\n//Creamos un contexto para hacer el token accesible a cualquier componente.\nexport const TokenContext = createContext();\n\n//Componente que crea un estado para el token\nexport const TokenContextProvider = ({ children }) => {\n  const [token, setToken] = useLocalStorage(\"token\", \"\");\n  const [loggedUser, setLoggedUser] = useState({});\n\n  const navigate = useNavigate();\n\n  //useEffect que se ejecuta cada vez que el token cambia\n  useEffect(() => {\n    //Si el token no existe, cambiamos loggedUser a un object vacío y cortamos la funcion\n    if (!token) {\n      setLoggedUser({});\n      return;\n    }\n\n    //Si el token existe recogemos la información del usuario y metemos los datos en loggedUser\n    const fetchUserProfile = async () => {\n      try {\n        const tokenEncryptedPayload = token.split(\".\")[1];\n\n        const tokenPayLoad = JSON.parse(atob(tokenEncryptedPayload));\n\n        const res = await fetch(\n          `http://localhost:4000/users/${tokenPayLoad.id}`,\n          {\n            headers: { Authorization: token },\n          }\n        );\n\n        const body = await res.json();\n\n        if (!res.ok) {\n          throw new Error(body.message);\n        }\n\n        setLoggedUser({ ...body.data.user, id: tokenPayLoad.id });\n      } catch (error) {\n        //Si hubiese un error al loguear devolvemos al user al login\n        console.error(error);\n        setToken(\"\");\n        navigate(\"/login\");\n      }\n    };\n\n    fetchUserProfile();\n  }, [token, navigate, setToken]);\n\n  return (\n    <TokenContext.Provider\n      value={{ token, setToken, loggedUser, setLoggedUser }}\n    >\n      {children}\n    </TokenContext.Provider>\n  );\n};\n\nexport const useTokenContext = () => {\n  return useContext(TokenContext);\n};\n"],"mappings":";;;AAAA,SAASA,aAAa,EAAEC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACtE,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,eAAe,MAAM,0BAA0B;;AAEtD;AAAA;AACA,OAAO,MAAMC,YAAY,gBAAGN,aAAa,EAAE;;AAE3C;AACA,OAAO,MAAMO,oBAAoB,GAAG,QAAkB;EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC;EAC/C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGL,eAAe,CAAC,OAAO,EAAE,EAAE,CAAC;EACtD,MAAM,CAACM,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC,CAAC;EAEhD,MAAMU,QAAQ,GAAGT,WAAW,EAAE;;EAE9B;EACAF,SAAS,CAAC,MAAM;IACd;IACA,IAAI,CAACO,KAAK,EAAE;MACVG,aAAa,CAAC,CAAC,CAAC,CAAC;MACjB;IACF;;IAEA;IACA,MAAME,gBAAgB,GAAG,YAAY;MACnC,IAAI;QACF,MAAMC,qBAAqB,GAAGN,KAAK,CAACO,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QAEjD,MAAMC,YAAY,GAAGC,IAAI,CAACC,KAAK,CAACC,IAAI,CAACL,qBAAqB,CAAC,CAAC;QAE5D,MAAMM,GAAG,GAAG,MAAMC,KAAK,CACpB,+BAA8BL,YAAY,CAACM,EAAG,EAAC,EAChD;UACEC,OAAO,EAAE;YAAEC,aAAa,EAAEhB;UAAM;QAClC,CAAC,CACF;QAED,MAAMiB,IAAI,GAAG,MAAML,GAAG,CAACM,IAAI,EAAE;QAE7B,IAAI,CAACN,GAAG,CAACO,EAAE,EAAE;UACX,MAAM,IAAIC,KAAK,CAACH,IAAI,CAACI,OAAO,CAAC;QAC/B;QAEAlB,aAAa,CAAC;UAAE,GAAGc,IAAI,CAACK,IAAI,CAACC,IAAI;UAAET,EAAE,EAAEN,YAAY,CAACM;QAAG,CAAC,CAAC;MAC3D,CAAC,CAAC,OAAOU,KAAK,EAAE;QACd;QACAC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;QACpBvB,QAAQ,CAAC,EAAE,CAAC;QACZG,QAAQ,CAAC,QAAQ,CAAC;MACpB;IACF,CAAC;IAEDC,gBAAgB,EAAE;EACpB,CAAC,EAAE,CAACL,KAAK,EAAEI,QAAQ,EAAEH,QAAQ,CAAC,CAAC;EAE/B,oBACE,QAAC,YAAY,CAAC,QAAQ;IACpB,KAAK,EAAE;MAAED,KAAK;MAAEC,QAAQ;MAAEC,UAAU;MAAEC;IAAc,CAAE;IAAA,UAErDJ;EAAQ;IAAA;IAAA;IAAA;EAAA,QACa;AAE5B,CAAC;AAAC,GArDWD,oBAAoB;EAAA,QACLF,eAAe,EAGxBD,WAAW;AAAA;AAAA,KAJjBG,oBAAoB;AAuDjC,OAAO,MAAM4B,eAAe,GAAG,MAAM;EAAA;EACnC,OAAOlC,UAAU,CAACK,YAAY,CAAC;AACjC,CAAC;AAAC,IAFW6B,eAAe;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}