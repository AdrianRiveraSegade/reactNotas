{"ast":null,"code":"var _jsxFileName = \"/home/hack/a/proyecto3/notas/src/components/NewNoteForm.js\",\n  _s = $RefreshSig$();\nimport \"./NewNoteForm.css\";\nimport { useState } from \"react\";\nimport { useTokenContext } from \"../context/TokenContext\";\nimport { Navigate, useNavigate } from \"react-router-dom\";\nimport ErrorMessage from \"./ErrorMessage\";\nimport uploadIcon from \"../assets/img/uploadIcon.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst NewNoteForm = () => {\n  _s();\n  //Usamos useNavigate para poder redirigir al usuario\n  const navigate = useNavigate();\n\n  //Traemos el token para usarlo en la petici贸n al crear na nota\n  const {\n    token\n  } = useTokenContext();\n\n  //Estados para controlar los inputs del formulario\n  const [title, setTitle] = useState(\"\");\n  const [text, setText] = useState(\"\");\n  const [image, setImage] = useState();\n\n  //State para almacenar un posile error  mostrarlo por pantalla\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  // Si el usuario no est logeado redirigimos a la pagina principal.\n  if (!token) return /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 22\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"newNoteForm\",\n      onSubmit: async event => {\n        try {\n          //Cancelamos el defalt del formulario\n          event.preventDefault();\n\n          //Creamos un nuevo formData para enviar en el body\n          const formData = new FormData();\n\n          //Metemos en el formData los datos introducidos por el usuario\n          formData.set(\"title\", title);\n          formData.set(\"text\", text);\n          formData.set(\"image\", image);\n\n          //Hacemos una petici贸n POST a la API  mandamos el formData en el body.\n          const res = await fetch(\"http://localhost:4000/note\", {\n            method: \"POST\",\n            headers: {\n              Authorization: token\n            },\n            body: formData\n          });\n\n          //Accedemos al body de la respuesta\n          const body = await res.json();\n\n          //Si la respuesta viene mal lanzamos un error\n          if (!res.ok) {\n            throw new Error(body.message);\n          } else {\n            //Redireccionamos al usuario a la pagina principal\n            navigate(\"/list\");\n          }\n        } catch (error) {\n          console.error(error);\n          setErrorMessage(error.message);\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"title\",\n        children: \"Titulo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"newtitle\",\n        id: \"title\",\n        required: true,\n        value: title,\n        onChange: e => setTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"text\",\n        children: \"Text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"newtext\",\n        id: \"text\",\n        required: true,\n        value: text,\n        onChange: event => {\n          setText(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"subeImg\",\n        htmlFor: \"images\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Sube imagenes:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"img\",\n          src: uploadIcon,\n          alt: \"subir imagen para la nota\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        hidden: true,\n        id: \"images\",\n        type: \"file\",\n        accept: \"image/*\",\n        onChange: e => setImage(e.target.files[0])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"guardar\",\n        children: \"Guardar nota\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n      msg: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true);\n};\n_s(NewNoteForm, \"syvkKn5nEPLnpwGhZRqFLXgx1Z0=\", false, function () {\n  return [useNavigate, useTokenContext];\n});\n_c = NewNoteForm;\nexport default NewNoteForm;\nvar _c;\n$RefreshReg$(_c, \"NewNoteForm\");","map":{"version":3,"names":["useState","useTokenContext","Navigate","useNavigate","ErrorMessage","uploadIcon","NewNoteForm","navigate","token","title","setTitle","text","setText","image","setImage","errorMessage","setErrorMessage","event","preventDefault","formData","FormData","set","res","fetch","method","headers","Authorization","body","json","ok","Error","message","error","console","e","target","value","files"],"sources":["/home/hack/a/proyecto3/notas/src/components/NewNoteForm.js"],"sourcesContent":["import \"./NewNoteForm.css\";\nimport { useState } from \"react\";\nimport { useTokenContext } from \"../context/TokenContext\";\nimport { Navigate, useNavigate } from \"react-router-dom\";\nimport ErrorMessage from \"./ErrorMessage\";\nimport uploadIcon from \"../assets/img/uploadIcon.png\";\n\nconst NewNoteForm = () => {\n  //Usamos useNavigate para poder redirigir al usuario\n  const navigate = useNavigate();\n\n  //Traemos el token para usarlo en la petici贸n al crear na nota\n  const { token } = useTokenContext();\n\n  //Estados para controlar los inputs del formulario\n  const [title, setTitle] = useState(\"\");\n  const [text, setText] = useState(\"\");\n  const [image, setImage] = useState();\n\n  //State para almacenar un posile error  mostrarlo por pantalla\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  // Si el usuario no est logeado redirigimos a la pagina principal.\n  if (!token) return <Navigate to=\"/\" />;\n\n  return (\n    <>\n      <form\n        className=\"newNoteForm\"\n        onSubmit={async (event) => {\n          try {\n            //Cancelamos el defalt del formulario\n            event.preventDefault();\n\n            //Creamos un nuevo formData para enviar en el body\n            const formData = new FormData();\n\n            //Metemos en el formData los datos introducidos por el usuario\n            formData.set(\"title\", title);\n            formData.set(\"text\", text);\n            formData.set(\"image\", image);\n\n            //Hacemos una petici贸n POST a la API  mandamos el formData en el body.\n            const res = await fetch(\"http://localhost:4000/note\", {\n              method: \"POST\",\n              headers: {\n                Authorization: token,\n              },\n              body: formData,\n            });\n\n            //Accedemos al body de la respuesta\n            const body = await res.json();\n\n            //Si la respuesta viene mal lanzamos un error\n            if (!res.ok) {\n              throw new Error(body.message);\n            } else {\n              //Redireccionamos al usuario a la pagina principal\n              navigate(\"/list\");\n            }\n          } catch (error) {\n            console.error(error);\n            setErrorMessage(error.message);\n          }\n        }}\n      >\n        <label htmlFor=\"title\">Titulo</label>\n        <input\n          className=\"newtitle\"\n          id=\"title\"\n          required\n          value={title}\n          onChange={(e) => setTitle(e.target.value)}\n        />\n\n        <label htmlFor=\"text\">Text</label>\n        <input\n          className=\"newtext\"\n          id=\"text\"\n          required\n          value={text}\n          onChange={(event) => {\n            setText(event.target.value);\n          }}\n        />\n\n        <label className=\"subeImg\" htmlFor=\"images\">\n          <p>Sube imagenes:</p>\n          <img\n            className=\"img\"\n            src={uploadIcon}\n            alt=\"subir imagen para la nota\"\n          />\n        </label>\n        <input\n          hidden\n          id=\"images\"\n          type=\"file\"\n          accept=\"image/*\"\n          onChange={(e) => setImage(e.target.files[0])}\n        />\n\n        <button className=\"guardar\">Guardar nota</button>\n      </form>\n\n      {errorMessage && <ErrorMessage msg={errorMessage} />}\n    </>\n  );\n};\n\nexport default NewNoteForm;\n"],"mappings":";;AAAA,OAAO,mBAAmB;AAC1B,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,eAAe,QAAQ,yBAAyB;AACzD,SAASC,QAAQ,EAAEC,WAAW,QAAQ,kBAAkB;AACxD,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,UAAU,MAAM,8BAA8B;AAAC;AAAA;AAEtD,MAAMC,WAAW,GAAG,MAAM;EAAA;EACxB;EACA,MAAMC,QAAQ,GAAGJ,WAAW,EAAE;;EAE9B;EACA,MAAM;IAAEK;EAAM,CAAC,GAAGP,eAAe,EAAE;;EAEnC;EACA,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACW,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,EAAE;;EAEpC;EACA,MAAM,CAACe,YAAY,EAAEC,eAAe,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;;EAEpD;EACA,IAAI,CAACQ,KAAK,EAAE,oBAAO,QAAC,QAAQ;IAAC,EAAE,EAAC;EAAG;IAAA;IAAA;IAAA;EAAA,QAAG;EAEtC,oBACE;IAAA,wBACE;MACE,SAAS,EAAC,aAAa;MACvB,QAAQ,EAAE,MAAOS,KAAK,IAAK;QACzB,IAAI;UACF;UACAA,KAAK,CAACC,cAAc,EAAE;;UAEtB;UACA,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,EAAE;;UAE/B;UACAD,QAAQ,CAACE,GAAG,CAAC,OAAO,EAAEZ,KAAK,CAAC;UAC5BU,QAAQ,CAACE,GAAG,CAAC,MAAM,EAAEV,IAAI,CAAC;UAC1BQ,QAAQ,CAACE,GAAG,CAAC,OAAO,EAAER,KAAK,CAAC;;UAE5B;UACA,MAAMS,GAAG,GAAG,MAAMC,KAAK,CAAC,4BAA4B,EAAE;YACpDC,MAAM,EAAE,MAAM;YACdC,OAAO,EAAE;cACPC,aAAa,EAAElB;YACjB,CAAC;YACDmB,IAAI,EAAER;UACR,CAAC,CAAC;;UAEF;UACA,MAAMQ,IAAI,GAAG,MAAML,GAAG,CAACM,IAAI,EAAE;;UAE7B;UACA,IAAI,CAACN,GAAG,CAACO,EAAE,EAAE;YACX,MAAM,IAAIC,KAAK,CAACH,IAAI,CAACI,OAAO,CAAC;UAC/B,CAAC,MAAM;YACL;YACAxB,QAAQ,CAAC,OAAO,CAAC;UACnB;QACF,CAAC,CAAC,OAAOyB,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;UACpBhB,eAAe,CAACgB,KAAK,CAACD,OAAO,CAAC;QAChC;MACF,CAAE;MAAA,wBAEF;QAAO,OAAO,EAAC,OAAO;QAAA,UAAC;MAAM;QAAA;QAAA;QAAA;MAAA,QAAQ,eACrC;QACE,SAAS,EAAC,UAAU;QACpB,EAAE,EAAC,OAAO;QACV,QAAQ;QACR,KAAK,EAAEtB,KAAM;QACb,QAAQ,EAAGyB,CAAC,IAAKxB,QAAQ,CAACwB,CAAC,CAACC,MAAM,CAACC,KAAK;MAAE;QAAA;QAAA;QAAA;MAAA,QAC1C,eAEF;QAAO,OAAO,EAAC,MAAM;QAAA,UAAC;MAAI;QAAA;QAAA;QAAA;MAAA,QAAQ,eAClC;QACE,SAAS,EAAC,SAAS;QACnB,EAAE,EAAC,MAAM;QACT,QAAQ;QACR,KAAK,EAAEzB,IAAK;QACZ,QAAQ,EAAGM,KAAK,IAAK;UACnBL,OAAO,CAACK,KAAK,CAACkB,MAAM,CAACC,KAAK,CAAC;QAC7B;MAAE;QAAA;QAAA;QAAA;MAAA,QACF,eAEF;QAAO,SAAS,EAAC,SAAS;QAAC,OAAO,EAAC,QAAQ;QAAA,wBACzC;UAAA,UAAG;QAAc;UAAA;UAAA;UAAA;QAAA,QAAI,eACrB;UACE,SAAS,EAAC,KAAK;UACf,GAAG,EAAE/B,UAAW;UAChB,GAAG,EAAC;QAA2B;UAAA;UAAA;UAAA;QAAA,QAC/B;MAAA;QAAA;QAAA;QAAA;MAAA,QACI,eACR;QACE,MAAM;QACN,EAAE,EAAC,QAAQ;QACX,IAAI,EAAC,MAAM;QACX,MAAM,EAAC,SAAS;QAChB,QAAQ,EAAG6B,CAAC,IAAKpB,QAAQ,CAACoB,CAAC,CAACC,MAAM,CAACE,KAAK,CAAC,CAAC,CAAC;MAAE;QAAA;QAAA;QAAA;MAAA,QAC7C,eAEF;QAAQ,SAAS,EAAC,SAAS;QAAA,UAAC;MAAY;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QAC5C,EAENtB,YAAY,iBAAI,QAAC,YAAY;MAAC,GAAG,EAAEA;IAAa;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA,gBACnD;AAEP,CAAC;AAAC,GAtGIT,WAAW;EAAA,QAEEH,WAAW,EAGVF,eAAe;AAAA;AAAA,KAL7BK,WAAW;AAwGjB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}